#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2009 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : opb_v20
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_v20

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = BUS
OPTION BUS_STD = OPB
OPTION MAX_MASTERS = 16
OPTION LAST_UPDATED = 10.1.2
OPTION DESC = On-chip Peripheral Bus (OPB) 2.0
OPTION LONG_DESC = OPB_V20 On-Chip Peripheral Bus V2.0 with OPB Arbiter (OPB_V20)
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (spartan3=AVAILABLE, spartan3an=AVAILABLE, spartan3a=AVAILABLE, spartan3e=AVAILABLE, spartan3adsp=AVAILABLE, virtex4lx=AVAILABLE, virtex4sx=AVAILABLE, virtex4fx=AVAILABLE, virtex5lx=AVAILABLE, virtex5sx=AVAILABLE, virtex5fx=AVAILABLE, virtex6=AVAILABLE)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION TCL_FILE = opb_v20_v2_1_0.tcl
OPTION TOP = opb_v20
OPTION MAX_SLAVES = 64

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, MIN_SIZE = 0x200, ISVALID = (C_PROC_INTRFCE == 1)
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector
PARAMETER C_OPB_AWIDTH = 32, DT = integer
PARAMETER C_OPB_DWIDTH = 32, DT = integer
PARAMETER C_NUM_MASTERS = 4, DT = integer
PARAMETER C_NUM_SLAVES = 4, DT = integer
PARAMETER C_USE_LUT_OR = 1, DT = integer, RANGE = (0,1)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IF = reset_0, IO_IS = polarity, RANGE = (0,1)
PARAMETER C_DYNAM_PRIORITY = 0, DT = integer, RANGE = (0,1)
PARAMETER C_PARK = 0, DT = integer, RANGE = (0,1)
PARAMETER C_PROC_INTRFCE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_REG_GRANTS = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DEV_BLK_ID = 0, DT = integer, RANGE = (0:255)
PARAMETER C_DEV_MIR_ENABLE = 0, DT = integer, RANGE = (0,1)

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT OPB_Rst = OPB_Rst, DIR = O
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT Debug_SYS_Rst = Debug_SYS_Rst, DIR = I
PORT WDT_Rst = WDT_Rst, DIR = I
PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH*C_NUM_MASTERS)-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_OPB_DWIDTH+7)/8*C_NUM_MASTERS-1]
PORT M_beXfer = M_beXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_DBus = M_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_MASTERS)-1]
PORT M_DBusEn = M_DBusEn, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_DBusEn32_63 = M_DBusEn32_63, DIR = I, VEC = [0:C_NUM_MASTERS-1], INITIALVAL = VCC
PORT M_dwXfer = M_dwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_fwXfer = M_fwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_hwXfer = M_hwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_request = M_request, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_select = M_select, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_seqAddr = M_seqAddr, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT Sl_beAck = Sl_beAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_SLAVES)-1]
PORT Sl_DBusEn = Sl_DBusEn, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC
PORT Sl_DBusEn32_63 = Sl_DBusEn32_63, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC
PORT Sl_errAck = Sl_errAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_dwAck = Sl_dwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_fwAck = Sl_fwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_hwAck = Sl_hwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_retry = Sl_retry, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_toutSup = Sl_toutSup, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_xferAck = Sl_xferAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT OPB_MRequest = OPB_MRequest, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_ABus = OPB_ABus, DIR = O, VEC = [0:C_OPB_AWIDTH-1]
PORT OPB_BE = OPB_BE, DIR = O, VEC = [0:(C_OPB_DWIDTH+7)/8-1]
PORT OPB_beXfer = OPB_beXfer, DIR = O
PORT OPB_beAck = OPB_beAck, DIR = O
PORT OPB_busLock = OPB_busLock, DIR = O
PORT OPB_rdDBus = OPB_rdDBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_wrDBus = OPB_wrDBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_DBus = OPB_DBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_errAck = OPB_errAck, DIR = O
PORT OPB_dwAck = OPB_dwAck, DIR = O
PORT OPB_dwXfer = OPB_dwXfer, DIR = O
PORT OPB_fwAck = OPB_fwAck, DIR = O
PORT OPB_fwXfer = OPB_fwXfer, DIR = O
PORT OPB_hwAck = OPB_hwAck, DIR = O
PORT OPB_hwXfer = OPB_hwXfer, DIR = O
PORT OPB_MGrant = OPB_MGrant, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_pendReq = OPB_pendReq, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_retry = OPB_retry, DIR = O
PORT OPB_RNW = OPB_RNW, DIR = O
PORT OPB_select = OPB_select, DIR = O
PORT OPB_seqAddr = OPB_seqAddr, DIR = O
PORT OPB_timeout = OPB_timeout, DIR = O
PORT OPB_toutSup = OPB_toutSup, DIR = O
PORT OPB_xferAck = OPB_xferAck, DIR = O

END
